<html>
<head>
<title>Joseph's Cool API Demo</title>
<style>
	input { display: block; }
</style>
</head>
<body>
<h3>Create a new Customer</h3>
<input id="custFName" type="text" placeholder="First Name" /> 
<input id="custLName" type="text" placeholder="Last Name" /> 
<input id="custStreetName" type="text" placeholder="Street Name" /> 
<input id="custStreetNumber" type="text" placeholder="Street Number" /> 
<input id="custCity" type="text" placeholder="City" /> 
<input id="custState" type="text" placeholder="State" /> 
<input id="custZip" type="text" placeholder="Zip" />
<input id="custSubmit" type="button" value="Submit"/>  
<h3>List Customers</h3>
<div id="listemhere"></div>
<input id="listSubmit" type="button" value="List" />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script>
{
	var x = "<div></div>";
	$('#html').append(x);
	$('#custSubmit').on('click', () => submitCust()); 
	
	$('#listSubmit').on('click', () => listCusts());
	
	function submitCust(){
		api('customers', 'POST', 
			{
				'first_name': $('#custFName').val(),
				'last_name': $('#custLName').val(),
				'address': {
					'street_number': $('#custStreetNumber').val(),
					'street_name': $('#custStreetName').val(),
					'city': $('#custCity').val(),
					'state': $('#custState').val(),
					'zip': $('#custZip').val()
				}
			},
			(resp) => {
				createAccount(resp.objectCreated._id);
				listCusts()
			}
		);
	}
	
	function quickSubmitCustomer(fname, lname, callback){
		api('customers','POST',{
			'first_name':fname,
			'last_name':lname,
			'address': {
				'street_number':'1234',
				'street_name':'Fake St',
				'city':'Fakeville',
				'state':'OH',
				'zip':'83530'
			} 
		}, 
		(resp) => {
			createAccount(resp.objectCreated._id, (response)=>{
				callback(resp.objectCreated._id); 
			}); 
		});
	}
	
	function listCusts(){
		if(localStorage.getItem('frands')){
			listFriends();
		} else {
			listGenerics();
		}
	}
	
	function listFriends(){
		let friendos = JSON.parse(localStorage.getItem('frands'));
		friendos = friendos.slice(10); 
		for(let friend of friendos){
			$('#listemhere').append('<div class="friend"><p>'+friend.name +
					'<p/><img class="friend_photo" src="'+friend.pic+'" /><hr /></div>');
			let lastP = $('#listemhere div.friend:last-child'); 
			if(friend.hasOwnProperty('cust_id')){
				lastP.attr('id',friend.cust_id);
			} else {
				quickSubmitCustomer(friend.name.split(' ')[0], friend.name.split(' ')[1],
					(response)=>{
						let id = response;
						lastP.attr('id', id);
						friend.cust_id = id;
						localStorage.setItem('frands', JSON.stringify(friendos));
					});
			}
			waitForReady(()=>{
				//for(let renderedFriend of friendos){
					listCustBalances(friend.cust_id);
				//}
			});
			
		}
	}
	
	function waitForReady(cb){
		if($('div.friend:not([id])').length>0){
			setTimeout(()=>waitForReady(cb),1000);
		} else {
			cb();
		}
	}
	
	//pull randos from the API that we've created
	function listGenerics(){
		api('customers', 'GET', '', (response) => {
			$('#listemhere').html('');
			for(let customer of response.slice(10)){
				$('#listemhere').append('<p id="'+customer._id+'">'+customer.first_name+' '+customer.last_name +
					'<p/><p>'+customer.address.street_number+' '+customer.address.street_name +
					' '+customer.address.city+', '+customer.address.state+' '+customer.address.zip
					+'</p><hr />');
				listCustBalances(customer._id);
			}
		});
	}
	
	function listCustBalances(id){
		api('customers/'+id+'/accounts','GET','',(response) => {
			for(let account of response){
				$('#'+id).append('<p class="balance">'+account.balance+'</p>'
					+'<input type="text" class="transaction_amount" placeholder="transaction" />'
					+'<input type="button" value="+" class="transaction_add" />'
					+'<input type="button" value="-" class="transaction_remove" />'
				);  
				
				$('#'+id).find('.transaction_add').on('click', (evt)=> {
					transact($(evt.target).parent().find('.transaction_amount').val(), account._id);
				});
				
				$('#'+id).find('.transaction_remove').on('click', (evt)=> {
					transact(-parseInt($(evt.target).parent().find('.transaction_amount').val()), account._id);
				});
				
				console.log(account.balance);
				if(account.balance>500 ){
					 console.log("Account balance is above 500 - You have enough money to go out!");
					 }else if (account.balance<=500){
						console.log("Youre account balance is under 500");
						}else if (account.balance<=400){
						console.log("Youre account balance is under 400");
						}	
			}
		});
	}
	
	function createAccount(id, callback=(response)=>{console.log(response)}){
		api('customers/'+id+'/accounts','POST', {
			"type":"Checking",
			"rewards":0,
			"nickname":"auto-created",
			"balance":500
		}, (response) => {
			callback(response);
		}); 
	}
	
	"<div class=\"green\">"
	
	function transact(amount, id) {
		api('accounts/'+id+'/'+((amount>0)?'deposits':'withdrawals'), 'POST', {
			"medium": "balance",
			"transaction_date": "2016-11-20",
			"amount": parseFloat(Math.abs(amount)),
			"description": "Hand-built transaction"
		}, (response) => {
			console.log(response);
		});
	}
	
	function api(endpoint, method, data, response){
		$.ajax({
			url: 'http://api.reimaginebanking.com/'+endpoint+'?key=6021ab09d195f722f7c5619957e8679d',
			method: method,
			contentType: 'application/json',
			data: JSON.stringify(data),
			success: (text)=>response(text)
		});
	}
	
	listCusts();
}
</script>

</body>
</html>
